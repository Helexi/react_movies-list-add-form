{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","error","errorContent","clear","setState","handleInput","event","target","name","value","trim","handleSubmit","preventDefault","newMovie","props","addMovie","this","onSubmit","required","type","placeholder","onChange","Component","App","moviesFromServer","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffe5024d.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void\n};\n\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  error: boolean,\n  errorContent: string,\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    error: false,\n    errorContent: '',\n  };\n\n  clear = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  handleInput = (event: React.ChangeEvent<HTMLFormElement>) => {\n    this.setState((state: State) => ({\n      ...state,\n      [event.target.name]: event.target.value.trim,\n    }));\n  };\n\n  handleSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newMovie = {\n      title: this.state.title,\n      description: this.state.description,\n      imgUrl: this.state.imgUrl,\n      imdbUrl: this.state.imdbUrl,\n      imdbId: this.state.imdbId,\n    };\n\n    if (!this.state.title.trim()\n      || this.state.description\n      || this.state.imgUrl\n      || this.state.imdbUrl\n      || this.state.imdbId) {\n      this.setState((state) => ({\n        ...state,\n        error: true,\n        errorContent: 'Please, do not write only spaces',\n      }));\n    }\n\n    this.clear();\n    this.props.addMovie(newMovie);\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={this.handleSubmit}\n      >\n        <p className=\"form__p\">\n          ADD A NEW FILM\n        </p>\n        {this.state.error && (\n          <p>{this.state.errorContent}</p>\n        )}\n        <input\n          required\n          className=\"form__input\"\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"write title\"\n          value={title}\n          onChange={(event) => {\n            this.setState({\n              title: event.target.value,\n            });\n          }}\n        />\n        <input\n          required\n          className=\"form__input\"\n          type=\"text\"\n          name=\"description\"\n          placeholder=\"write description\"\n          value={description}\n          onChange={(event) => {\n            this.setState({\n              description: event.target.value,\n            });\n          }}\n        />\n        <input\n          required\n          className=\"form__input\"\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"write imgUrl\"\n          value={imgUrl}\n          onChange={(event) => {\n            this.setState({\n              imgUrl: event.target.value,\n            });\n          }}\n        />\n        <input\n          required\n          className=\"form__input\"\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"write imdbUrl\"\n          value={imdbUrl}\n          onChange={(event) => {\n            this.setState({\n              imdbUrl: event.target.value,\n            });\n          }}\n        />\n        <input\n          required\n          className=\"form__input\"\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"write imdbId\"\n          value={imdbId}\n          onChange={(event) => {\n            this.setState({\n              imdbId: event.target.value,\n            });\n          }}\n        />\n        <button\n          type=\"submit\"\n          className=\"button\"\n        >\n          ADD FILM\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((state) => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}